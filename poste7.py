C_1 = "62595cdf486822e897c466e22175896a4e26223d52edd6f0b1468f5190e711529aa30855c2dc30078c3935238d464ea862897205e039143a8d447a61ec1f60ab0bff74e0cbe75e687e24a96c2126157af6891c84d649b86ac94cd26cf818ffb915efce570886ba684ce9e1e27d24585595b6de8d2f3c1ed0702cc40f723539f412a3784aec4272b22742a3fa4ebea9758a1474ddf8e75a104dcc726ebee5494d0eaeabbbaf25c184de0b9117608ca790f17001338f783b30ac66f2d89befd9066e4aa6bb8d014ec8c31c60b06604039b80f4f1c6aeb20e36a9dcb71a09855fc3a6fe1a5d943aef24780563407978af7638c3c79f723f4ca9bcea338064d02f8e"
C_2 = "6b0d1430f270593724d89fbd0cdf55b0a4d00b3b4fe5a79d9f07109696df0c9356b89d44b54770f8c09961aa302c9bdc1dde7eef1535af301d8a974b26be7142643e79a5943be0b767af4be223f3bb732fd6151cf1116990158feed059aac814152bc7bb5643d068181cd11510403b69595b69d8cd7cd24240093616f04401f60cf78fbed20d2155329a5c0b9f4d7b30864736620f74d66b13a5769de7042ecde6594f5b7698cfbd48c1c773934fbd5f5f09ba3a498b268dde881aaeebd46b48b7c1308e2c29b68e6df3363d0225fe5547163cf7274e2d0d0d00ca06ddff56095ab75014e7f18d03a7add74c688b249ed5dbb5663308411f69ab713fb9262062"
N = 20472755655653349921172483032024180907541553405557391908967254515810276685101823094145214745919641156392742814714095992779289288925855289743559075813986546025648519472327942102557450845614127921879924355342900523446567393285820193953558334561028683117003342566167930857425386773561315473589493060952967901758543391811581311431017097898420818490100617290797374987599675371567067258427849955621606076433110708105462652921141020739569625354570809394690808387488282007839438765445724849801116083434056757502573837479160954258671927999711330916081425291134511397599177589161543948729791853938199530238792212908035230814807

E_1 = 15392567994693984468686624119093445278552521315090906957723799548111195040498559748043236446419497287232276007280477924571653056438762274853677502048518244634329549651543138712375915130759071454226031989979974033087069775104090096318088675320184218554405746216697142068346526966399741790739723746897031210946686178579144680522141399893619100353865225109938742411221728766562535028371740340459283738049511514427947306763889942783576910488880891385844237743086572356120540503107425051832293170786106512952492269886610330972112461877248092073647003069831871029385926346916885523141952766042610513314234871157865000305049
E_2 = 14884676539924785268999706606103652253865222237969550361359476537517244591242666141349652773814030226110692551861083948991015840349737081131779974913187643646207692281158052619845252546502054026026768863698608756773932028830065217083479841669478141477380489409613335669383386407951295273834848718778491095263601010370393322902757949214407957654945798280765479311342148501238391645047193552361191502425865256409799237200658245999031548395729711232253751335404120540987697827193170257167678673262654754131348491845190365008171784002902912427775680438046286368359169422099374334980306624574544450530458909200890670283149
C_1 = int(C_1, 16)
C_2 = int(C_2, 16)


def egcd(a, b):
    """return (g, x, y) such that a*x + b*y = g = gcd(a, b)"""
    x0, x1, y0, y1 = 0, 1, 1, 0
    while a != 0:
        (q, a), b = divmod(b, a), a
        y0, y1 = y1, y0 - q * y1
        x0, x1 = x1, x0 - q * x1
    return b, x0, y0


def modinv(a, m):
    g, x, _ = egcd(a, m)
    if g != 1:
        raise ValueError('Modular inverse does not exist.')
    else:
        return x % m


"""
on calcule e1u + e2v =1
"""

t, u, v = egcd(E_1, E_2)
"""
print(u)
print(v)
print(t)
"""

M = pow(C_1, u, N) * pow(C_2, v, N)
M = pow(M, 1, N)
print("M == " + str(M))

print(C_1)
print(pow(M, E_1, N))


M = hex(M)
message = M[2:]
print(message)

clair = bytes.fromhex(message).decode('utf-8')
print(clair)
